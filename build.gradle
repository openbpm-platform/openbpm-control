/*
 * Copyright (c) Haulmont 2024. All Rights Reserved.
 * Use is subject to license terms.
 */

plugins {
    id 'io.jmix' version '2.4.1'
    id 'java'
    id 'org.jetbrains.gradle.plugin.idea-ext' version '1.1.9'
}

apply plugin: 'org.springframework.boot'
apply plugin: 'com.vaadin'

jmix {
    bomVersion = '2.4.1'
}

group = 'io.openbpm'
version = '1.1.999-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        url 'https://global.repo.jmix.io/repository/public'
    }
    maven {
        url 'https://maven.vaadin.com/vaadin-addons'
    }
}

dependencies {
    def camundaVersion = '7.21.0'
    def springCloudVersion = '2023.0.1'
    def openFeignVersion = '4.1.1'
    def mapstructVersion = '1.5.5.Final'
    def lombokVersion = '1.18.32'
    def vaadinSpinnerVersion = '24.1.0'
    def jacksonModuleKotlinVersion = '2.13.3'

    // Jmix
    implementation 'io.jmix.core:jmix-core-starter'
    implementation 'io.jmix.gridexport:jmix-gridexport-flowui-starter'
    implementation 'io.jmix.data:jmix-eclipselink-starter'
    implementation 'io.jmix.security:jmix-security-starter'
    implementation 'io.jmix.security:jmix-security-flowui-starter'
    implementation 'io.jmix.security:jmix-security-data-starter'
    implementation 'io.jmix.localfs:jmix-localfs-starter'
    implementation 'io.jmix.flowui:jmix-flowui-starter'
    implementation 'io.jmix.flowui:jmix-flowui-data-starter'
    implementation 'io.jmix.flowui:jmix-flowui-themes'
    implementation 'io.jmix.datatools:jmix-datatools-starter'
    implementation 'io.jmix.datatools:jmix-datatools-flowui-starter'
    implementation 'io.jmix.charts:jmix-charts-flowui-starter'
    implementation 'io.jmix.translations:jmix-translations-ru'

    //Vaadin add-ons
    implementation "org.vaadin.addons.componentfactory:spinner:${vaadinSpinnerVersion}"

    // Spring
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    implementation "org.springframework.cloud:spring-cloud-starter-openfeign:${openFeignVersion}"

    //Actuator
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // Camunda
    implementation "org.camunda.community.rest:camunda-platform-7-rest-client-spring-boot:${camundaVersion}"
    implementation "org.camunda.bpm:camunda-bom:${camundaVersion}"
    implementation "io.holunda.camunda-api:camunda-bpm-engine-api:${camundaVersion}"

    // Camunda util dependencies
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:${jacksonModuleKotlinVersion}"

    // Preprocessors
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    implementation "org.projectlombok:lombok:${lombokVersion}"

    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    // Database drivers

    // test: Spring
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    // test: Jmix
    testImplementation 'io.jmix.flowui:jmix-flowui-test-assist'

    // test: processors
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    implementation 'org.hsqldb:hsqldb'
}

configurations.implementation {
    exclude group: 'com.vaadin', module: 'hilla'
    exclude group: 'com.vaadin', module: 'hilla-dev'
}

test {
    useJUnitPlatform()
}

idea {
    module {
        excludeDirs.addAll(files '.jmix', 'node_modules', 'src/main/frontend/generated/', 'src/main/bundles')
    }
}

vaadin {
    optimizeBundle = false
}
